=  DevOps at Sonatype
:title: Lessons Learned using Repository Managers and Supply Chain Tools for DevOps at Sonatype
:Author:   Manfred Moser, Sonatype, Inc.
:Date: October 2015
:icons:
:copyright: Copyright 2011-present, Sonatype Inc. All Rights Reserved.
:incremental:

== DevOps at Sonatype
:incremental!:

[quote]
Lessons Learned from Using Repository Managers and Software Supply Chain Tools 

Manfred Moser - http://twitter.com/simpligility[@simpligility] 

* Community Advocate, Author & Trainer

Brian Fox - http://twitter.com/brian_fox[@brian_fox] 

* VP of Product Management

Sonatype - http://twitter.com/sonatypebrian_fox[@sonatype] - http://www.sonatype.com[www.sonatype.com]

== What Are You Learning Today?
:incremental!:

[quote]
What worked? What caused problems?

-> Apply 'our' lessons to 'your' situation

== What does Sonatype actually do? 
:incremental!:

Manages and develops:

* Central Repository (aka Maven Central)
* OSSRH and related Forges
* Nexus Repository Manager
* Nexus IQ Server
* Nexus IQ Data Services
* Related documentation, websites, blogs, videos,...

== Software Component Warehouse
:incremental!:

Nexus Repository Manager

* 70% market share
* > 61K active server installations
* Open Source: Maven2, npm, RubyGems, NuGet, Docker, ...
* Commercial: Component Information, Staging, Smart Proxy, User Token, ...
* Nexus 3 - distinct new codebase

== Software Supply Chain Solutions
:incremental!:

Solutions:

* Nexus Firewall
* Nexus Auditor
* Nexus Lifecycle

Include

* Nexus IQ Server
* Integrations with Jenkins, Hudson, Bamboo
* Eclipse IDE/M2e Plugin
* SonarQube integration
* Command-line tool and REST API

All of this is backed by... 

== Nexus IQ Data Services
:incremental!:

Data and services for:

* Age
* Popularity
* Security vulnerabilities
* License information
* Multiple component formats

-> Constantly updated, curated and accurate data.

== Central Repository 
:incremental!:

[quote]
aka. Maven Central

* Largest Maven2 format repository
* High performance, global CDN 
* Default in Apache Maven and others

And the components come from... OSSRH and Forges

* OSSRH - large deployment of Nexus Repository Manager
* Apache, JBoss, java.net ... - secondary Nexus instances
* Community support - on-boarding and documentation

==  Central and OSSRH Numbers

* > 17 billion download in 2014
* > 1 million GAV coordinates
* Currently about 100k projects total
* Approx. 3000 new projects each month (GA)
* 10 - 30 project verified and onbarded per day
* Approx. 30.000 new releases each month (GAV)

== Who Helps at Sonatype
:incremental!:

* Internationally distributed 
* Multiple-time zones
* Remote work the rule, not the exception
* Roughly 100 people

TIP: Western North America to Eastern Europe

image::images/nexus-team-timezones.png[scale=100]

== Teams
:incremental!:

* Numerous smaller teams
* Different focus of teams
* Cross-team members 
* Dynamic grouping around efforts - 'task force'

== Process

In a nutshell - nothing special, no surprises.

image::images/usual-process.png[scale=100]

== Process

* Scrum framework
* Kanban inspired
* Backlog refinement
* Regular meetings

-> Differs per team!

[quote]
Everyone has their own process. You need to figure out what works for you!


== Product Owner Team

Multi-disciplinary team: 

* Security
* Development
* Architecture
* User experience
* Documentation


== Communication
:incremental!:

* Good old phone and VOIP
* Atlassian HipChat
* Google Hangouts
* join.me
* PagerDuty

TIP: Using video more has helped avoid misunderstandings.

////
== Source Control
:incremental!:

* GitHub - public and private
* Atlassian Stash - private only

TIP: We are an early Git adopter and use it exclusively. 
////
  
== Track and Plan
:incremental!:

* Atlassian JIRA
* Trello
* Basecamp
* Aha.io
* Salesforce

Tool Lessons:

* Different people use different tools
* Overlap is inevitable
* Be prepared to implement integrations
* Tools come and go - be agile

////
== Continuous Integration
:incremental!:

* Stopped using Hudson long time ago
* Atlassian Bamboo

IMPORTANT: CI infrastructure is an invaluable workhorse!

== Build
:incremental!:
 
* Apache Maven
* Grunt and NPM for client side
* Shell scripts


== Maven Tips and Tricks
:incremental!:

* Maven wrapper
* Follow best practices
* Organization POM
* Enforcer Plugin
* and lots more
////

== (Maven) Project Complexity

Find balance for

* Number vs size of projects
* Multi-module vs multiple projects
* Consider release cycle
* Branching, Git and CI integration
* IDE functionality
* Build time

TIP: Example Nexus OSS and Nexus Pro

== Develop
:incremental!:

* Feature branches
** short lived
** sometimes shared between
** automatic Bamboo feature branch build creation
** feature flags for longer lived efforts 
* IDE
** Eclipse IDE
** IntelliJ IDEA
* Lots of OSX, some Windows & Linux

== Test
:incremental!:

Unit, functional and manual

* Junit
* Geb
* Spock
* Pax Exam
* Selenide

TIP: No tests, no merge!

== Document
:incremental!:

Multiple output formats from:

* Atlassian Confluence
* Google Docs
* Asciidoc
* Pelican

Instituting development workflows including 

* Git-based versioning 
* and branching, 
* pull requests and reviews 
* and CI builds 

is very useful! 

== Continuously Build
:incremental!:

* Atlassian Bamboo with Elastic Bamboo
* > 100 build plans
* Feature branch builds increases number
* Automated test, release and deployment
* Base plan build with shared artifact
* All plans - similar setup
* Share outputs as artifacts

TIP: Consistency helps users and administrators.

== Validate
:incremental!:

* SonarQube - integrated in Bamboo and GitHub
* License check with Maven plugin
* Pull requests and code reviews
** No merges without build passing and code review 
* Component policy with Nexus Lifecycle

== Release
:incremental!:

* Workflow and notification with Nexus staging
* Including validation with Nexus Lifecycle
** Security checks
** License checks
** Architecture checks (e.g. component age)
* Usage of release build number - `2.11.4-01`
* Same release stuff on OSSRH

TIP: No matter what you do .. there is always a chance something goes wrong.

////
== Release
:incremental!:

image::images/nexus-bamboo-staging.png[scale=100]

////

== Software Supply Chain Management
:incremental!:

[quote]
We are dogfooding our own tools 

* Nexus Repository Manager
* Nexus Lifecycle

including Bamboo integration and IDE integration.


== Nexus Repository Manager 

* Component source for consumers
* Component target for producers

image::images/producers-consumers.png[scale=100]

== Colocate For Performance

Continuous integration is consumer and producer.

Best practice: 

* Get it close together
* And sync to another repository if needed. 

image::images/nexus-bamboo-rso.png[scale=100]

== Nexus Repository Manager Tips

Here are a few things that work for us

* Versioning and component deployment
** Only SNAPSHOT versions of 'master' are deployed
** Feature branch versions are 'not' deployed
* Multiple server installations
** In different networks
** Smart proxy between them
* Release with Staging 
** Dogfooding ourselves 
** Thousands of users and projects on OSSRH

== Nexus Lifecycle

* Define risks we care about 
* Open source contributions change our policy
* Understand our process and tooling
* Limit overhead in our build automation

We gain

* Visualized risk through rule-based automation
* Streamlined component selection based on real time data

== Nexus IQ Server Deployment

image::images/nexus-iq-server-integration.png[scale=100]

== Policy Configuration

Simplified version: 

image::images/sonatype-policy.png[scale=100]


== Resulting Report

Overview section in notification:

image::images/nexus-clm-report.png[scale=100]


== Black Listing and White Listing

Define

* Which components are okay to be used?
* Which components are 'not' okay to be used?

Problem 

* Too many criteria
* Complex and labor intensive to figure out criteria and values
* Usage influences criteria
* Different usage for different projects

IMPORTANT: It just doesn't work! Too slow. Not scalable.

== Golden Repository 

[quote] 
Only the good components can be in the repository.

Problems:

* Components age like milk, not wine!
* A golden repository per project?
* Does not scale

IMPORTANT: On the surface it looks easy. It's 'not'!


== Perimeter Protection

Nexus Firewall 

* Requires up to date and accurate information
** As provided by Nexus IQ Data Services
* Tremendous help to reduce influx
* But does not control usage

TIP: Helps, but is not the full solution. Just like a network firewall. Its not enough.

== Nexus Lifecycle Lessons

Once we had Nexus Lifecycle and started using it...

* Surprised how many components are used
* Blocking a release for policy violations
** is a big stick
** but it works
* Shared ownership helps  - socialize the resolution/enforcement process
* Initial introduction forced some cleanup of old issues
* Ongoing low noise and fast results increases usage, adoption

-> Without the automation this would be not achievable!

////
== Deploy

Ops team:

* RPMs
* Docker images
* Manual tweaks
* Ansible

== Operations

* SaaS is used whenever possible
* Kanban process
* iDoneThis

TIP: Our Nexus instances vary from hundreds of GB to terabytes of non-proxied context.
////

== Operations - Service Management

Nexus as component warehouse with Ansible

image::images/service-management.png[scale=100]


////
== Support

[quote]
The support team consists of engineers only.

* Write lots of automation and other code
* Atlassian JIRA
* ZenDesk 
////

== Community
:incremental!:

* Actively work with vendors
* Including open source projects
* Help upstream to help yourself
** Report issues
** Release testing
** Contributions
* Avoid forking third party libraries
** But do it cleanly when necessary
** And send back upstream

== What's Next?
:incremental!:

* Join the Nexus community at http://www.sonatype.org/nexus[http://www.sonatype.org/nexus]
* Start using Nexus OSS
* Try Nexus Repository Manager
* Try Nexus Lifecycle

TIP: Come to our booth for demos, T-shirts and more.

== The End 
:incremental!:

[quote]
Want to help us -> we are hiring!

Questions, remarks &  discussion


Slides::

* http://sonatype.github.io/nexus-presentations/[http://sonatype.github.io/nexus-presentations/] 
* or email manfred@sonatype.com

== Resources
:incremental!:

* http://www.sonatype.com[sonatype.com]
* http://www.sonatype.org/nexus/[Nexus community]
* http://search.maven.org[Central Repository] and http://central.sonatype.org[documentation]
* http://www.sonatype.org/nexus/2015/04/16/using-atlassian-bamboo-and-nexus-for-continuous-integration/[Inside Engineering - blog post]
* http://www.sonatype.org/nexus/members-only/video-gallery-2/inside-the-sonatype-engineering-machine-the-process-and-the-tooling/[Inside Engineering - videos]
* http://www.sonatype.org/nexus/members-only/video-gallery-2/free-training-sonatype-nexus-and-clm-tips-from-the-trenches/[Nexus Tips from the Trenches video series]
* http://www.sonatype.com/speedbumps[2015 State of the Software Supply Chain Report]
* http://links.sonatype.com/products/nexus/oss/docs[Repository Management with Nexus]
* http://zeroturnaround.com/rebellabs/java-tools-and-technologies-landscape-for-2014/[Java Tools and Technologies Landscape for 2014]
* http://sonatype.github.io/nexus-presentations/[Nexus related slides including this one...]
